stages:
  - build
  - test
  - checkstyle
  - deploy

test:
  stage: test
  image: maven:3.3.9-jdk-8
  script:
    - echo "Test DEMO app"
    - mvn test && mvn jacoco:report
    - cat target/site/jacoco/index.html | grep -o '.*'
  coverage: "/Total.*?([0-9]{1,3})%/"
  only:
    - production

checkstyle:
  stage: checkstyle
  image: maven:3.3.9-jdk-8
  script:
    - echo "Checkstyle DEMO app"
    - mvn checkstyle:check
  only:
    - production

build_image:
  image: docker:latest
  services:
    - docker:dind
    - rabbitmq:latest
  stage: build
  script:
    - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest
  only:
    - production


variables:
  DB_IP: ec2-54-74-14-109.eu-west-1.compute.amazonaws.com
  DB_PORT: 5432
  DB_USER: egtxyycswgtejv
  DB_PASSWORD: b2f2ce8c4f296a73847a20585023dd915d48db32dbfd4d96af0061dc76524da2
  DB_DBNAME: de76fo2mh2bq17
  APP_NAME: iulia-santa-foodcaring-backend

deploy:
  image: docker:latest
  services:
    - docker:dind
  stage: deploy
  only:
    - production
  script:
    - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest
    - docker tag $CI_REGISTRY_IMAGE $HEROKU_REGISTRY_IMAGE:latest
    - docker login --username=_ --password=$HEROKU_API_KEY $HEROKU_REGISTRY
    - docker push $HEROKU_REGISTRY_IMAGE:latest
    - docker run --rm -e HEROKU_API_KEY=$HEROKU_API_KEY wingrunr21/alpine-heroku-cli container:release web --app $APP_NAME
